name: .NET build & deploy 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
      #publish EmployeeManagement
      #publish EmployeeManagement.API
    - name: Publish EmployeeManagement.API
      run: |
        dotnet publish EmployeeManagement/EmployeeManagement.API/EmployeeManagement.API.csproj -c Release -o $GITHUB_WORKSPACE/EmployeeManagement.API
        cd $GITHUB_WORKSPACE 
        zip -r EmployeeManagement.API.zip cd $GITHUB_WORKSPACE/EmployeeManagement.API
    
      #publish EmployeeManagement.Application
    - name: Publish EmployeeManagement.Application
      run: | 
        dotnet publish EmployeeManagement/EmployeeManagement.Application/EmployeeManagement.Application.csproj -c Release -o $GITHUB_WORKSPACE/EmployeeManagement.Application 
        cd $GITHUB_WORKSPACE
        zip -r EmployeeManagement.Application.zip $GITHUB_WORKSPACE/EmployeeManagement.Application
      
      #publish EmployeeManagement.Core
    - name: Publish EmployeeManagement.Core
      run: | 
        dotnet publish EmployeeManagement/EmployeeManagement.Core/EmployeeManagement.Core.csproj -c Release -o $GITHUB_WORKSPACE/EmployeeManagement.Core
        cd $GITHUB_WORKSPACE
        zip -r EmployeeManagement.Core.zip $GITHUB_WORKSPACE/EmployeeManagement.Core

      #publish EmployeeManagement.DataAccess
    - name: Publish EmployeeManagement.DataAccess
      run: | 
        dotnet publish EmployeeManagement/EmployeeManagement.DataAccess/EmployeeManagement.DataAccess.csproj -c Release -o $GITHUB_WORKSPACE/EmployeeManagement.DataAccess
        cd $GITHUB_WORKSPACE
        zip -r EmployeeManagement.DataAccess.zip $GITHUB_WORKSPACE/EmployeeManagement.DataAccess

      #RouteManagement

      #publish RouteManagement.API

    - name: Publish RouteManagement.API
      run: |
        dotnet publish RouteManagement/RouteManagement.API/RouteManagement.API.csproj -c Release -o $GITHUB_WORKSPACE/RouteManagement.API
        cd $GITHUB_WORKSPACE
        zip -r RouteManagement.API.zip $GITHUB_WORKSPACE/RouteManagement.API

      #publish RouteManagement.Application 

    - name: Publish RouteManagement.Application
      run: | 
        dotnet publish RouteManagement/RouteManagement.Application/RouteManagement.Application.csproj -c Release -o $GITHUB_WORKSPACE/RouteManagement.Application
        cd $GITHUB_WORKSPACE
        zip -r RouteManagement.Application.zip $GITHUB_WORKSPACE/RouteManagement.Application

      #publish RouteManagement.Core 

    - name: Publish RouteManagement.Core
      run: |
        dotnet publish RouteManagement/RouteManagement.Core/RouteManagement.Core.csproj -c Release -o $GITHUB_WORKSPACE/RouteManagement.Core
        cd $GITHUB_WORKSPACE
        zip -r RouteManagement.Core.zip $GITHUB_WORKSPACE/RouteManagement.Core

      #publish RouteManagement.DataAccess 

    - name: Publish RouteManagement.DataAccess
      run: |
        dotnet publish RouteManagement/RouteManagement.DataAccess/RouteManagement.DataAccess.csproj -c Release -o $GITHUB_WORKSPACE/RouteManagement.DataAccess
        cd $GITHUB_WORKSPACE
        zip -r RouteManagement.DataAccess.zip $GITHUB_WORKSPACE/RouteManagement.DataAccess

    #Utilities
    # publish  Utilities 

    - name: Publish Utilities
      run: | 
        dotnet publish Utilities/Utilities.csproj -c Release -o $GITHUB_WORKSPACE/Utilities
        cd $GITHUB_WORKSPACE
        zip -r Utilities.zip $GITHUB_WORKSPACE/Utilities

    #FerryManagement
    # publish FerryManagement.Web 

    - name: Publish FerryManagement.Web
      run: | 
        dotnet publish WebUI/FerryManagement.Web/FerryManagement.Web.csproj -c Release -o $GITHUB_WORKSPACE/FerryManagement.Web
        cd $GITHUB_WORKSPACE
        zip -r FerryManagement.Web.zip $GITHUB_WORKSPACE/FerryManagement.Web

      #Upload Ferry-Management-System-Zip Artifact
    - name: Upload Ferry-Management-System-Zip Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Ferry-Management-System-Zip
        path: /home/runner/work/EmployeeManagement/EmployeeManagement/*.zip
        if-no-files-found: error

    #Deploy EmployeeManagement

  
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Ferry-Management-System-Zip Artifact
        uses: actions/download-artifact@v2
        with:
          name: Ferry-Management-System-Zip

      - name: check file
        run: cd /home/runner/work/EmployeeManagement/EmployeeManagement && ls

      - name: Copy via ssh 
        uses: garygrossgarten/github-action-scp@v0.8.0
        with:
          local: /home/runner/work/EmployeeManagement/EmployeeManagement
          remote: /home/azureuser/Ferry-Management-System-Zip
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
       
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: pwd
   
